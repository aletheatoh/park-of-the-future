<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <!-- css stylesheet -->
  <link rel="stylesheet" type="text/css" href="/css/style.css">

  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.2/mapbox-gl.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.2/mapbox-gl.css' rel='stylesheet' />
  <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.2.0/mapbox-gl-geocoder.min.js'></script>
<link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v2.2.0/mapbox-gl-geocoder.css' type='text/css' />

  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.js"></script>
  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css">
  <title>Login</title>

</head>
<body>

  <div id='map'>
  </div>
  <script>

  mapboxgl.accessToken = 'pk.eyJ1IjoibWFuaXNobmFpciIsImEiOiJjamdqMWdqcXQwY2xrMnhudzI2c245aDd2In0.AxR3vxzUtWjv312SBHmnYA';

  var map = new mapboxgl.Map({
    container: 'map', // container id
    style: 'mapbox://styles/manishnair/cjgj23lov00112snzt6u5dccj',
    center: [103.7830464, 1.2883539], // starting position
    pitch: 90,
    zoom: 18 // starting zoom
  });

  map.addControl(new MapboxGeocoder({
    accessToken: mapboxgl.accessToken
}));

  // The 'building' layer in the mapbox-streets vector source contains building-height
  // data from OpenStreetMap.
  map.on('load', function() {

    // START OF MAP ******************************************

    // Insert the layer beneath any symbol layer.
    var layers = map.getStyle().layers;

    var labelLayerId;
    for (var i = 0; i < layers.length; i++) {
      if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {
        labelLayerId = layers[i].id;
        break;
      }
    }
    // Create 3D building effect
    map.addLayer({
      'id': '3d-buildings',
      'source': 'composite',
      'source-layer': 'building',
      'filter': ['==', 'extrude', 'true'],
      'type': 'fill-extrusion',
      'minzoom': 15,
      'paint': {
        'fill-extrusion-color': '#aaa',

        // use an 'interpolate' expression to add a smooth transition effect to the
        // buildings as the user zooms in
        'fill-extrusion-height': [
          "interpolate", ["linear"], ["zoom"],
          15, 0,
          15.05, ["get", "height"]
        ],
        'fill-extrusion-base': [
          "interpolate", ["linear"], ["zoom"],
          15, 0,
          15.05, ["get", "min_height"]
        ],
        'fill-extrusion-opacity': .6
      }
    }, labelLayerId);

    // Add geolocate control to the map.
    map.addControl(new mapboxgl.GeolocateControl({
      positionOptions: {
        enableHighAccuracy: true
      },
      trackUserLocation: true,
      showUserLocation: true
    }));

    // Location Pointer 1
    map.loadImage('https://i.imgur.com/klIIaW1.png', function(error, image) {
      if (error) throw error;

      map.addImage('cat2', image);

      map.addLayer({
        "id": "points2",
        "type": "symbol",
        "source": {
          "type": "geojson",
          "data": {
            "type": "FeatureCollection",
            "features": [{
              "type": "Feature",
              "geometry": {
                "type": "Point",
                "coordinates": [103.7820464, 1.2882639]
              }
            }]
          }
        },
        "layout": {
          "icon-image": "cat2",
          "icon-size": 0.25
        }
      });

    });
    // Location Pointer 2 (Highlighted)
    map.loadImage('https://i.imgur.com/MWOrh1i.png', function(error, image) {
      if (error) throw error;

      map.addImage('cat1', image);
      map.addLayer({
        "id": "points1",
        "type": "symbol",
        "source": {
          "type": "geojson",
          "data": {
            "type": "FeatureCollection",
            "features": [{
              "type": "Feature",
              "geometry": {
                "type": "Point",
                "coordinates": [103.7832264, 1.2886639]
              }
            }]
          }
        },
        "layout": {
          "icon-image": "cat1",
          "icon-size": 0.25
        }
      });

      // When a click event occurs on a feature in the places layer, open a popup at the
      // location of the feature, with description HTML from its properties.
      map.on('click', 'points1', function (e) {
        var coordinates = e.features[0].geometry.coordinates.slice();
        var description = "<strong><i class=\"computer icon\"></i>Breaking Down Those Tech Buzzwords</strong><p>Hosted by: Clement Lee<br>Location: Room 123<br></p>";

        // Ensure that if the map is zoomed out such that multiple
        // copies of the feature are visible, the popup appears
        // over the copy being pointed to.
        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
        }

        var popup = new mapboxgl.Popup()
        .setLngLat(coordinates)
        .setHTML(description)
        .addTo(map);

      });

      // Change the cursor to a pointer when the mouse is over the places layer.
      map.on('mouseenter', 'points1', function () {
        map.getCanvas().style.cursor = 'pointer';
      });

      // Change it back to a pointer when it leaves.
      map.on('mouseleave', 'points1', function () {
        map.getCanvas().style.cursor = '';
      });
    });

    {{#each events}}
    map.loadImage('https://i.imgur.com/MWOrh1i.png', function(error, image) {
      if (error) throw error;
      console.log({{this.lat}});
      map.addImage('{{this.name}}', image);
      map.addLayer({
        "id": '{{this.id}}',
        "type": "symbol",
        "source": {
          "type": "geojson",
          "data": {
            "type": "FeatureCollection",
            "features": [{
              "type": "Feature",
              "geometry": {
                "type": "Point",
                "coordinates": [{{this.lng}}, {{this.lat}}]
              }
            }]
          }
        },
        "layout": {
          "icon-image": '{{this.name}}',
          "icon-size": 0.25
        }
      });
      });
    {{/each}}

    // END OF MAP ******************************************
  });
  </script>

  <form id="logout-button" method="POST" action="/users/logout" class="right floated item">
    <button onclick="window.location.href='/signin'" class="primary small ui icon button" id="sign-out-button">
      <i class="icon sign out"></i>Sign Out
    </button>
  </form>


  <div class="container">

    <div class="ui success message">
      <i class="close icon"></i>
      <div class="header">
        Welcome {{#if returningUser}} back {{/if}} to CookieTalk, {{username}}!
      </div>
      <p>Start exploring what's around you!</p>
    </div>

    <div id="navbar">
      <button class="green large circular ui icon button" id="create-event-button">
        <i class="icon add"></i>
      </button>
      <button class="yellow large circular ui icon button" id="all-events-button">
        <i class="icon list"></i>
      </button>
      <button class="orange large circular ui icon button" id="my-events-button">
        <i class="icon user"></i>
      </button>
    </div>

    <!-- CREATE EVENT MODAL -->
    <div class="ui longer modal create-event">
      <i class="close icon"></i>
      <div style="font-size: 30px" class="header">
        Create An Event
      </div>

      <div class="scrolling content">
        <form id="create-event-form" method="POST" action="/events">
          <div class="ui form">
            <div class="field">
              <label>Event Title</label>
              <input name="name" type="text" placeholder="E.g. Cryptocurrency 101">
            </div>
            <div class="field datetime">
              <label>Date</label>
              <input name="date" id="date-input" type="date">

            </div>
            <div class="field time">
              <label>Start Time</label>
              <input name="starttime" type="time">
            </div>
            <div class="field time">
              <label>End Time</label>
              <input name="endtime" type="time">
            </div>

            <div id="locationField">
              <div class="field">
                <label>Venue Location</label>
                <input id="autocomplete" placeholder="Enter your address"
                onFocus="geolocate()" onBlur="getCoordinates()" type="text"></input>
                <input id="lat-input" name="lat" type="text" style="display:none;"></input>
                <input id="lng-input" name="lng" type="text" style="display:none;"></input>
              </div>
            </div>
            <br>

            <div class="field">
              <label>Event Category</label>
              <!-- <select name="cars">
                <option value="volvo">Volvo</option>
                <option value="saab">Saab</option>
                <option value="fiat">Fiat</option>
                <option value="audi">Audi</option>
              </select> -->

              <div class="ui fluid selection dropdown">
                <input name="category" type="hidden" placeholder="Event Category">
                <i class="dropdown icon"></i>
                <div class="default text">Select a Category</div>

                <div class="menu">
                  <div class="item" value="Career and Business">
                    <i class="briefcase icon"></i>
                    Career & Business
                  </div>
                  <div class="item" data-value="Tech">
                    <img class="ui mini avatar image" src="img/robot.png" style="margin-left:-3.5;">
                    Tech
                  </div>
                  <div class="item" data-value="Sports and Wellness">
                    <i class="heartbeat icon"></i>
                    Sports & Wellness
                  </div>
                  <div class="item" data-value="Learning">
                    <i class="book icon"></i>
                    Learning
                  </div>
                  <div class="item" data-value="Arts and Culture">
                    <img class="ui mini avatar image" src="img/arts-icon.svg" style="width: 18px; margin-left:0px;">
                    Arts & Culture
                  </div>
                  <div class="item" data-value="Others">
                    <img class="ui mini avatar image" src="img/others-icon.svg" style="width: 15px; margin-left:0px;">
                    Others
                  </div>
                </div>

              </div>
              <br>
              <div class="field textarea">
                <label>Event Description</label>
                <textarea name="description" type="text" placeholder="Tell us about your event."></textarea>
              </div>

            </div>

            <script>
            $('.ui.dropdown')
            .dropdown();

            </script>

          </div>

        </form>
      </div>

      <div class="actions">
        <button class="ui right aligned olive button" onclick="$('form#create-event-form').submit();">Submit</button>
      </div>
    </div>

    <!-- ALL EVENTS MODAL-->
    <div class="ui longer modal all-events">
      <i class="close icon"></i>
      <div style="font-size: 30px" class="header">
        All Events
      </div>
      <div class="scrolling content">

        <h2><i class="briefcase icon"></i>Career & Business</h2>
        <a class="ui blue centered card" href="#">
          <div class="content">
            <div class="header">Pitch By NUS CS 254 students</div>
            <div style="display:inline;"class="description">
              <span>31 April 2018, 4.30pm</span><br>
              <span>Co-Science Park Room 123</span>
            </div>
          </div>
          <div class="extra content">
            <button class="yellow large ui icon button" id="interest-button">
              <i class="icon star"></i>13
            </button>

            <script>
            $('#interest-button').click(function() {
              $('#interest-button').html('<i class="icon star"></i>14');
            });

            </script>
            <div class="right floated author">
              Hosted by: Alethea Toh
            </div>
          </div>
        </a>

        <h2><img src="img/robot.png" id="robot-icon" alt="robot-icon">Tech</h2>
        <a class="ui violet centered card" href="#">
          <div class="content">
            <div class="header">Drone flying</div>
            <div class="description">
              <span>1 June 2018, 4.30pm</span><br>
              <span>Quad</span>
            </div>
          </div>
          <div class="extra content">
            <button class="yellow large ui icon button" id="interest-button">
              <i class="icon star"></i>9
            </button>
            <div class="right floated author">
              Hosted by: Manish Nair
            </div>
          </div>
        </a>

        <h2><i class="heartbeat icon"></i>Sports & Wellness</h2>
        <a class="ui pink centered card" href="#">
          <div class="content">
            <div class="header">Yoga on the lawn</div>
            <div class="description">
              <span>1 May 2018, 4.30pm</span><br>
              <span>Lawn</span>
            </div>
          </div>
          <div class="extra content">
            <button class="yellow large ui icon button" id="interest-button">
              <i class="icon star"></i>2
            </button>
            <div class="right floated author">
              Hosted by: Manish Nair
            </div>
          </div>
        </a>

        <h2><i class="book icon"></i>Learning</h2>
        <a class="ui olive centered card" href="#">
          <div class="content">
            <div class="header">Discussing cambridge analytica</div>
            <div class="description">
              <span>29 April 2018, 4.30pm</span><br>
              <span>Co-Science Park Room 123</span>
            </div>
          </div>
          <div class="extra content">
            <button class="yellow large ui icon button" id="interest-button">
              <i class="icon star"></i>20
            </button>
            <div class="right floated author">
              Hosted by: Manish Nair
            </div>
          </div>
        </a>

        <h2><img src="img/arts-icon.svg" id="arts-icon" alt="arts-icon">Arts & Culture</h2>
        <a class="ui red centered card" href="#">
          <div class="content">
            <div class="header">Guitar jamming session</div>
            <div class="description">
              <span>30 April 2018, 4.30pm</span><br>
              <span>BBQ Pit (I bought wings)</span>
            </div>
          </div>
          <div class="extra content">
            <button class="yellow large ui icon button" id="interest-button">
              <i class="icon star"></i>0
            </button>
            <div class="right floated author">
              Hosted by: Alethea Toh
            </div>
          </div>
        </a>

        <h2><img src="img/others-icon.svg" id="others-icon" alt="others-icon">Others</h2>
        <a class="ui orange centered card" href="#">
          <div class="content">
            <div class="header">KopiTalk</div>
            <div class="description">
              <span>29 April 2018, 6pm</span><br>
              <span>Co-Science Park Room 123</span>
            </div>
          </div>
          <div class="extra content">
            <button class="yellow large ui icon button" id="interest-button">
              <i class="icon star"></i>5
            </button>
            <div class="right floated author">
              Hosted by: Manish Nair
            </div>
          </div>
        </a>

      </div>

    </div>

    <!-- MY EVENTS -->
    <div class="ui longer modal my-events">
      <i class="close icon"></i>
      <div style="font-size: 30px" class="header">
        My Events
      </div>
      <div class="scrolling content">

        <h2><i class="briefcase icon"></i>Career & Business</h2>
        <a class="ui blue centered card" href="#">
          <div class="content">
            <div class="header">Pitch By NUS CS 254 students</div>
            <div class="description">
              <span>31 April 2018, 4.30pm</span><br>
              <span>Co-Science Park Room 123</span>
            </div>
          </div>
          <div class="extra content">
            <div class="right floated author">
              <button class="ui green button"><i class="pencil icon"></i>Edit</button>
              <button class="ui red button"><i class="trash icon"></i>Delete</button>
            </div>
          </div>
        </a>

        <h2><i class="heartbeat icon"></i>Sports & Wellness</h2>
        <a class="ui pink centered card" href="#">
          <div class="content">
            <div class="header">Yoga on the lawn</div>
            <div class="description">
              <span>1 May 2018, 4.30pm</span><br>
              <span>Lawn</span>
            </div>
          </div>
          <div class="extra content">
            <div class="right floated author">
              <button class="ui green button"><i class="pencil icon"></i>Edit</button>
              <button class="ui red button"><i class="trash icon"></i>Delete</button>
            </div>
          </div>
        </a>

        <h2><i class="book icon"></i>Learning</h2>
        <a class="ui centered card" href="#">
          <div class="content">
            <div class="header">Discussing cambridge analytica</div>
            <div class="description">
              <span>29 April 2018, 4.30pm</span><br>
              <span>Co-Science Park Room 123</span>
            </div>
          </div>
          <div class="extra content">
            <div class="right floated author">
              <button class="ui green button"><i class="pencil icon"></i>Edit</button>
              <button class="ui red button"><i class="trash icon"></i>Delete</button>
            </div>
          </div>
        </a>


      </div>
      <!-- <div class="actions">
      <button id="my-events-close-button" class="ui button">Close</button>
    </div> -->
  </div>


  <script>

  $('.message .close')
  .on('click', function() {
    $(this)
    .closest('.message')
    .transition('fade')
    ;
  })
  ;

  // DISPLAY CREATE EVENT MODAL
  $(function(){
    $("#create-event-button").click(function(){
      $(".create-event").modal('show');
    });
    $("#create-event-close-button").click(function(){
      $(".create-event").modal('hide');
      location.reload();
    });
    $(".create-event").modal({
      closable: true
    });
  });

  // DISPLAY ALL EVENTS MODAL
  $(function(){
    $("#all-events-button").click(function(){
      $(".all-events").modal('show');
    });
    $("#all-events-close-button").click(function(){
      $(".all-events").modal('hide');
      location.reload();
    });
    $(".all-events").modal({
      closable: true
    });
  });

  // DISPLAY MY EVENTS MODAL
  $(function(){
    $("#my-events-button").click(function(){
      // $('#create-event-piece').embed();
      $(".my-events").modal('show');
    });
    $("#my-events-close-button").click(function(){
      $(".my-events").modal('hide');
      location.reload();
    });
    $(".my-events").modal({
      closable: true
    });
  });

  </script>

  <script>
  // This example displays an address form, using the autocomplete feature
  // of the Google Places API to help users fill in the information.

  var placeSearch, autocomplete;

  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:

  // Bias the autocomplete object to the user's geographical location,
  // as supplied by the browser's 'navigator.geolocation' object.

  function initAutocomplete() {
    // Create the autocomplete object, restricting the search to geographical
    // location types.
    autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      {types: ['geocode']});
      console.log(autocomplete);
    }

    function geolocate() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var geolocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          var circle = new google.maps.Circle({
            center: geolocation,
            radius: position.coords.accuracy
          });
          autocomplete.setBounds(circle.getBounds());

        });
      }
    }

    function getCoordinates() {
      var place = autocomplete.getPlace();
      $('#lat-input').val(place.geometry.location.lat());
      $('#lng-input').val(place.geometry.location.lng());
      // console.log("Lat: " + place.geometry.location.lat());
      // console.log("Long: " + place.geometry.location.lng());
    }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCYzIzHZUMxbmbGWmWNvF6C0Ojzi3XTN1E&libraries=places&callback=initAutocomplete"
    async defer></script>

  </div>

</body>
</html>
