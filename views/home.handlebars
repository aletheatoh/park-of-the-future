<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <!-- css stylesheet -->
  <link rel="stylesheet" type="text/css" href="/css/style.css">

  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.2/mapbox-gl.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.2/mapbox-gl.css' rel='stylesheet' />

  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.js"></script>
  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css">
  <title>Login</title>


  <style>
      body { margin:0; padding:0; }
      #map { position:absolute; top:0; width:100%; height: 90%; z-index: 0;}
  </style>
  </head>
  <body>

  <div id='map'></div>
  <script>
  mapboxgl.accessToken = 'pk.eyJ1IjoibWFuaXNobmFpciIsImEiOiJjamdqMWdqcXQwY2xrMnhudzI2c245aDd2In0.AxR3vxzUtWjv312SBHmnYA';
  var map = new mapboxgl.Map({
  container: 'map', // container id
  style: 'mapbox://styles/manishnair/cjgj23lov00112snzt6u5dccj',
  center: [103.7830464, 1.2883539], // starting position
  pitch: 90,
  zoom: 18 // starting zoom
  });


  // The 'building' layer in the mapbox-streets vector source contains building-height
  // data from OpenStreetMap.
  map.on('load', function() {

  // START OF MAP ******************************************

  // Insert the layer beneath any symbol layer.
  var layers = map.getStyle().layers;

  var labelLayerId;
  for (var i = 0; i < layers.length; i++) {
      if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {
          labelLayerId = layers[i].id;
          break;
      }
  }
  // Create 3D building effect
  map.addLayer({
      'id': '3d-buildings',
      'source': 'composite',
      'source-layer': 'building',
      'filter': ['==', 'extrude', 'true'],
      'type': 'fill-extrusion',
      'minzoom': 15,
      'paint': {
          'fill-extrusion-color': '#aaa',

          // use an 'interpolate' expression to add a smooth transition effect to the
          // buildings as the user zooms in
          'fill-extrusion-height': [
              "interpolate", ["linear"], ["zoom"],
              15, 0,
              15.05, ["get", "height"]
          ],
          'fill-extrusion-base': [
              "interpolate", ["linear"], ["zoom"],
              15, 0,
              15.05, ["get", "min_height"]
          ],
          'fill-extrusion-opacity': .6
      }
  }, labelLayerId);

  // Add geolocate control to the map.
  map.addControl(new mapboxgl.GeolocateControl({
      positionOptions: {
          enableHighAccuracy: true
      },
      trackUserLocation: true,
      showUserLocation: true
  }));

  // Location Pointer 1
  map.loadImage('https://i.imgur.com/klIIaW1.png', function(error, image) {
      if (error) throw error;
      map.addImage('cat2', image);
      map.addLayer({
          "id": "points2",
          "type": "symbol",
          "source": {
              "type": "geojson",
              "data": {
                  "type": "FeatureCollection",
                  "features": [{
                      "type": "Feature",
                      "geometry": {
                          "type": "Point",
                          "coordinates": [103.7820464, 1.2882639]
                      }
                  }]
              }
          },
          "layout": {
              "icon-image": "cat2",
              "icon-size": 0.25
          }
      });
  });
  // Location Pointer 2 (Highlighted)
  map.loadImage('https://i.imgur.com/MWOrh1i.png', function(error, image) {
      if (error) throw error;
      map.addImage('cat1', image);
      map.addLayer({
          "id": "points1",
          "type": "symbol",
          "source": {
              "type": "geojson",
              "data": {
                  "type": "FeatureCollection",
                  "features": [{
                      "type": "Feature",
                      "geometry": {
                          "type": "Point",
                          "coordinates": [103.7832264, 1.2886639]
                      }
                  }]
              }
          },
          "layout": {
              "icon-image": "cat1",
              "icon-size": 0.25
          }
      });
  });
  // END OF MAP ******************************************



  });


  </script>

  <!-- <div class="ui labeled bottom attached three item icon menu">
  <a class="item">
    <i class="add icon" id="create-event-button"></i>
    Create Event
  </a>
  <a class="item">
    <i class="list icon" id="all-events-button"></i>
    All Events
  </a>
  <a class="item">
    <i class="user icon" id="my-events-button"></i>
    My Events
  </a>
</div> -->

<div class="container">
<div id="navbar">
<!-- <button class="ui button" id="create-event-button"><i class="trash icon"></i>Delete Entry</button>
<button class="ui button" id="all-events-button"><i class="trash icon"></i>Delete Entry</button>
<button class="ui button" id="my-events-button"><i class="trash icon"></i>Delete Entry</button>  -->
<button class="large circular ui icon button" id="create-event-button">
  <i class="icon add"></i>
</button>
<button class="large circular ui icon button" id="all-events-button">
  <i class="icon list"></i>
</button>
<button class="large circular ui icon button" id="my-events-button">
  <i class="icon user"></i>
</button>
</div>

  <!-- CREATE EVENT MODAL -->
  <div class="ui longer modal create-event">
    <i class="close icon"></i>
    <div style="font-size: 30px" class="header">
      Create An Event
    </div>
    <div class="scrolling content">
      <div class="ui form">
        <div class="field">
          <label>Event Title</label>
          <input type="text" placeholder="Cryptocurrency 101">
        </div>
      <div id="locationField">
        <div class="field">
          <label>Venue Location</label>
        <input id="autocomplete" placeholder="Enter your address"
               onFocus="geolocate()" type="text"></input>
          </div>
      </div>
      <table style="display:none;" id="address">
      <tr>
        <td class="label">Street address</td>
        <td class="slimField"><input class="field" id="street_number"
              disabled="true"></input></td>
        <td class="wideField" colspan="2"><input class="field" id="route"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">City</td>
        <!-- Note: Selection of address components in this example is typical.
             You may need to adjust it for the locations relevant to your app. See
             https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressform
        -->
        <td class="wideField" colspan="3"><input class="field" id="locality"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">State</td>
        <td class="slimField"><input class="field"
              id="administrative_area_level_1" disabled="true"></input></td>
        <td class="label">Zip code</td>
        <td class="wideField"><input class="field" id="postal_code"
              disabled="true"></input></td>
      </tr>
      <tr>
        <td class="label">Country</td>
        <td class="wideField" colspan="3"><input class="field"
              id="country" disabled="true"></input></td>
      </tr>
    </table>

    <br>

    <div class="field">
    <label>Event Category</label>
    <div class="ui fluid selection dropdown">
      <input type="hidden" name="event-category" placeholder="Event Category">
      <i class="dropdown icon"></i>
      <div class="default text">Saved Contacts</div>

      <div class="menu">
        <div class="item">
          <i class="briefcase icon"></i>
          Career & Business
        </div>
        <div class="item">
          <i class="keyboard icon"></i>
          Tech
        </div>
        <div class="item">
          <i class="heartbeat icon"></i>
          Sports & Wellness
        </div>
        <div class="item">
          <i class="book icon"></i>
          Learning
        </div>
        <div class="item">
          <i class="briefcase icon"></i>
          Arts & Culture
        </div>
        <div class="item">
          <i class="briefcase icon"></i>
          Others
        </div>
      </div>

    </div>
    <br>
    <div class="field textarea">
      <label>Event Description</label>
      <textarea name="original" type="text" placeholder="Tell us about your event"></textarea>
    </div>
  </div>

  <script>
  $('.ui.dropdown')
  .dropdown();

  </script>

      </div>
    </div>

    <div class="actions">
      <button id="create-event-close-button" class="ui button">Close</button>
    </div>

  </div>

  <!-- ALL EVENTS MODAL-->
  <div class="ui longer modal all-events">
    <i class="close icon"></i>
    <div style="font-size: 30px" class="header">
      All Events
    </div>
    <div class="scrolling content">

      <h2><i class="briefcase icon"></i>Career & Business</h2>
        <a class="ui blue centered card" href="#">
          <div class="content">
            <div class="header">Cryptocurrency 101</div>
          <div class="description">
            <span>29 April 2018, 4.30pm</span><br>
            <span>Co-Science Park Room 123</span>
          </div>
        </div>
        <div class="extra content">
          <div class="right floated author">
            Hosted by: Manish Nair
          </div>
        </div>
      </a>
      <a class="ui blue centered card" href="#">
        <div class="content">
          <div class="header">Cryptocurrency 101</div>
          <div class="description">
            <span>29 April 2018, 4.30pm</span><br>
            <span>Co-Science Park Room 123</span>
          </div>
        </div>
        <div class="extra content">
          <div class="right floated author">
            Hosted by: Manish Nair
          </div>
        </div>
      </a>

    <h2><i class="keyboard icon"></i>Tech</h2>
      <a class="ui centered card" href="#">
        <div class="content">
          <div class="header">Cryptocurrency 101</div>
        <div class="description">
          <span>29 April 2018, 4.30pm</span><br>
          <span>Co-Science Park Room 123</span>
        </div>
      </div>
      <div class="extra content">
        <div class="right floated author">
          Hosted by: Manish Nair
        </div>
      </div>
    </a>

  <h2><i class="heartbeat icon"></i>Sports & Wellness</h2>
    <a class="ui centered card" href="#">
      <div class="content">
        <div class="header">Cryptocurrency 101</div>
      <div class="description">
        <span>29 April 2018, 4.30pm</span><br>
        <span>Co-Science Park Room 123</span>
      </div>
    </div>
    <div class="extra content">
      <div class="right floated author">
        Hosted by: Manish Nair
      </div>
    </div>
  </a>

<h2><i class="book icon"></i>Learning</h2>
  <a class="ui centered card" href="#">
    <div class="content">
      <div class="header">Cryptocurrency 101</div>
    <div class="description">
      <span>29 April 2018, 4.30pm</span><br>
      <span>Co-Science Park Room 123</span>
    </div>
  </div>
  <div class="extra content">
    <div class="right floated author">
      Hosted by: Manish Nair
    </div>
  </div>
</a>

<h2><img src="img/others-icon.svg" id="others-icon" alt="others-icon">Tech</h2>
  <a class="ui centered card" href="#">
    <div class="content">
      <div class="header">Cryptocurrency 101</div>
    <div class="description">
      <span>29 April 2018, 4.30pm</span><br>
      <span>Co-Science Park Room 123</span>
    </div>
  </div>
  <div class="extra content">
    <div class="right floated author">
      Hosted by: Manish Nair
    </div>
  </div>
</a>

</div>
<div class="actions">
  <button id="all-events-close-button" class="ui button">Close</button>
</div>
</div>

<!-- MY EVENTS -->
<div class="ui longer modal my-events">
  <i class="close icon"></i>
  <div style="font-size: 30px" class="header">
    My Events
  </div>
  <div class="scrolling content">

    <h2><i class="briefcase icon"></i>Career & Business</h2>
      <a class="ui centered card" href="#">
        <div class="content">
          <div class="header">Cryptocurrency 101</div>
        <div class="description">
          <span>29 April 2018, 4.30pm</span>
        </div>
        <div class="description">
          <span>Co-Science Park Room 123</span>
        </div>
      </div>
      <div class="extra content">
        <div class="right floated author">
          <button class="ui green button"><i class="pencil icon"></i>Edit</button>
          <button class="ui red button"><i class="trash icon"></i>Delete</button>
        </div>
      </div>
    </a>
    <a class="ui centered card" href="#">
      <div class="content">
        <div class="header">Cryptocurrency 101</div>
        <div class="description">
          <span>29 April 2018, 4.30pm</span>
        </div>
        <div class="description">
          <span>Co-Science Park Room 123</span>
        </div>
      </div>
      <div class="extra content">
        <div class="right floated author">
          <button class="ui green button"><i class="pencil icon"></i>Edit</button>
          <button class="ui red button"><i class="trash icon"></i>Delete</button>
        </div>
      </div>
    </a>

<h2><i class="heartbeat icon"></i>Sports & Wellness</h2>
  <a class="ui centered card" href="#">
    <div class="content">
      <div class="header">Cryptocurrency 101</div>
      <!-- <div class="meta">
      <span class="category">Animals</span>
    </div> -->
    <div class="description">
      <span>29 April 2018, 4.30pm</span>
    </div>
    <div class="description">
      <span>Co-Science Park Room 123</span>
    </div>
  </div>
  <div class="extra content">
    <div class="right floated author">
      <button class="ui green button"><i class="pencil icon"></i>Edit</button>
      <button class="ui red button"><i class="trash icon"></i>Delete</button>
    </div>
  </div>
</a>

<h2><i class="book icon"></i>Learning</h2>
<a class="ui centered card" href="#">
  <div class="content">
    <div class="header">Cryptocurrency 101</div>
  <div class="description">
    <span>29 April 2018, 4.30pm</span>
  </div>
  <div class="description">
    <span>Co-Science Park Room 123</span>
  </div>
</div>
<div class="extra content">
  <div class="right floated author">
    <button class="ui green button"><i class="pencil icon"></i>Edit</button>
    <button class="ui red button"><i class="trash icon"></i>Delete</button>
  </div>
</div>
</a>


</div>
  <div class="actions">
    <button id="my-events-close-button" class="ui button">Close</button>
  </div>
</div>


<script>

// DISPLAY CREATE EVENT MODAL
$(function(){
  $("#create-event-button").click(function(){
    $(".create-event").modal('show');
  });
  $("#create-event-close-button").click(function(){
    $(".create-event").modal('hide');
    location.reload();
  });
  $(".create-event").modal({
    closable: true
  });
});

// DISPLAY ALL EVENTS MODAL
$(function(){
  $("#all-events-button").click(function(){
    $(".all-events").modal('show');
  });
  $("#all-events-close-button").click(function(){
    $(".all-events").modal('hide');
    location.reload();
  });
  $(".all-events").modal({
    closable: true
  });
});

// DISPLAY MY EVENTS MODAL
$(function(){
  $("#my-events-button").click(function(){
    // $('#create-event-piece').embed();
    $(".my-events").modal('show');
  });
  $("#my-events-close-button").click(function(){
    $(".my-events").modal('hide');
    location.reload();
  });
  $(".my-events").modal({
    closable: true
  });
});

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCYzIzHZUMxbmbGWmWNvF6C0Ojzi3XTN1E&libraries=places&callback=initAutocomplete"
    async defer></script>


<script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }
      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCYzIzHZUMxbmbGWmWNvF6C0Ojzi3XTN1E&libraries=places&callback=initAutocomplete"
        async defer></script>

</div>

</body>
</html>
